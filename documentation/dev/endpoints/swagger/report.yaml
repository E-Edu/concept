openapi: '3.0.2'
info:
  title: Report Microservice
  version: 'v2'
servers:
- url: https://report.e-edu.the-morpheus.de
- url: http://localhost:80
tags:
- name: ticket
  description: Report Microservice
- name: support
paths:
  /ticket:
    post:
      summary: Creates a new ticket
      tags: 
        - ticket
      security: 
        - JWT: [write]
        - ServiceToken: [write]
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      - name: X-ServiceToken
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                task_id:
                  type: string
                  format: guid
                title:
                  type: string
                body:
                  type: string
                report_reason:
                  type: string
                  enum:
                    - TROLLING
                    - FAULTY_TASK
                    - SPELLING_MISTAKE
                    - UNCLEAR
                    - INCORECTLY_CORRECTED
                    - DISCRIMINATING
                    - POLITICALY_INCORRECT
                    - BIASED
                    - OTHER

    
      responses:
        '200':
          description: OK
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /ticket/{ticket_id}:
    delete:
      summary : Deletes a ticket
      tags: 
        - ticket
      security:
        - JWT: [write]
        - ServiceToken: [write]
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
        - name: X-ServiceToken
          in: header
          required: true
          schema:
            type: string
        - name: ticket_id
          in: path
          required: true
          description: The ID corresponding to the ticket
          schema:
            type: string
            format: guid
            minimum: 0
      responses:
        '200':
          description: OK
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    
  
  /ticket/list:
    get:
      summary: Returns a list of all available tickets
      tags: 
        - ticket
      security:
        - JWT: [read]
        - ServiceToken: [write]
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
        - name: X-ServiceToken
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Body contains an array of tickets
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    ticket_id:
                      type: string
                      format: guid
                    task_id:
                      type: string
                      format: guid
                    user_id:
                      type: string
                    title:
                      type: string
                    body:
                      type: string
                    report_reason:
                      type: string
                      enum:
                        - TROLLING
                        - FAULTY_TASK
                        - SPELLING_MISTAKE
                        - UNCLEAR
                        - INCORECTLY_CORRECTED
                        - DISCRIMINATING
                        - POLITICALY_INCORRECT
                        - BIASED
                        - OTHER
                    
   
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    
  
  /ticket/{ticket_id}/edit:
    put:
      summary : Changes a speifc tickets title and body.
      tags: 
        - ticket
      security:
        - JWT: [write]
        - ServiceToken: [write]
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
        - name: X-ServiceToken
          in: header
          required: true
          schema:
            type: string
        - name: ticket_id
          in: path
          required: true
          description: The ID corresponding to the ticket
          schema:  
            type: string
            format: guid
            minimum: 0
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                body:
                  type: string

      responses:
        '200':
          description: OK
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
                    
  /ticket/{ticket_id}/answer:
     put:
      summary : Mark as troll
      tags: 
        - ticket
      security:
        - JWT: [write]
        - ServiceToken: [write]
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
        - name: X-ServiceToken
          in: header
          required: true
          schema:
            type: string
        - name: ticket_id
          in: path
          required: true
          description: The ID corresponding to the ticket
          schema:  
            type: string
            format: guid
            minimum: 0
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                is_troll:
                  type: boolean

      responses:
        '200':
          description: OK
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /support:
    post:
      summary: Creates a new support ticket
      tags: 
        - support
      security: 
        - JWT: [write]
        - ServiceToken: [write]
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      - name: X-ServiceToken
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                body:
                  type: string


    
      responses:
        '200':
          description: OK
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /support/{ticket_id}:
    delete:
      summary : Deletes a support ticket
      tags: 
        - support
      security:
        - JWT: [write]
        - ServiceToken: [write]
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
        - name: X-ServiceToken
          in: header
          required: true
          schema:
            type: string
        - name: ticket_id
          in: path
          required: true
          description: The ID corresponding to the ticket
          schema:
            type: string
            format: guid
            minimum: 0
      responses:
        '200':
          description: OK
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    
  
  /support/list:
    get:
      summary: Returns a list of all available support tickets
      tags: 
        - support
      security:
        - JWT: [read]
        - ServiceToken: [write]
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
        - name: X-ServiceToken
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Body contains an array of tickets
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    ticket_id:
                      type: string
                      format: guid
                    task_id:
                      type: string
                      format: guid
                    sender:
                      type: string
                    title:
                      type: string
                    body:
                      type: string    
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    
  
  /support/{ticket_id}/edit:
    put:
      summary : Changes a speifc tickets title and body.
      tags: 
        - support
      security:
        - JWT: [write]
        - ServiceToken: [write]
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
        - name: X-ServiceToken
          in: header
          required: true
          schema:
            type: string
        - name: ticket_id
          in: path
          required: true
          description: The ID corresponding to the ticket
          schema:  
            type: string
            format: guid
            minimum: 0
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                body:
                  type: string

      responses:
        '200':
          description: OK
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
                    
  /support/{ticket_id}/answer:
     put:
      summary : Answer to a support ticket
      tags: 
        - support
      security:
        - JWT: [write]
        - ServiceToken: [write]
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
        - name: X-ServiceToken
          in: header
          required: true
          schema:
            type: string
        - name: ticket_id
          in: path
          required: true
          description: The ID corresponding to the ticket
          schema:  
            type: string
            format: guid
            minimum: 0
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                response_title:
                  type: string 
                response_body:
                  type: string

      responses:
        '200':
          description: OK
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  securitySchemes:
    JWT:
      type: http
      scheme: bearer
      bearerFormat: JWT
    ServiceToken:
      type: http
      scheme: bearer
      bearerFormat: randomstring
  responses:
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    MethodNotAllowed:
      description: Method not allowed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotAcceptable:
      description: Not acceptable
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    RequestTimeout:
      description: Request timeout
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Conflict:
      description: Conflict
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Gone:
      description: Gone
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    LengthRequiered:
      description: Length requiered
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    PreconditionFailed:
      description: Precondition failed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    PayloadTooLarge:
      description: Payload too large
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    RequestURITooLong:
      description: Request-URI too long
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    RequestRangeNotSatisfiable:
      description: Request range not satisfiable
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    ExpectationFailed:
      description: Expectation failed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    UnprocessableEntity:
      description: Unprocessable entity
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Locked:
      description: Locked
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    TooManyRequests:
      description: Too many requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NoResponse:
      description: No response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotImplemented:
      description: Not implemented
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    BadGateway:
      description: BadGateway
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    ServiceUnavailable:
      description: Service unavailable
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Insufficient Storage:
      description: Insufficient Storage
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    LoopDetected:
      description: Loop detected
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    BandwidthLimitExceeded:
      description: Bandwidth limit exceeded
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotExtended:
      description: Not extended
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NetworkAuthenticationRequired:
      description: Network authentication required
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NetworkConnectTimeoutError:
      description: Network connect timeout error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  schemas:
    Error:
      oneOf:
        - $ref: '#/components/schemas/InternalError'
        - $ref: '#/components/schemas/ValidationError'
        - $ref: '#/components/schemas/ControllerError'

    InternalError:
      type: object
      properties:
        timestamp:
          type: string
          example: 2020-03-22T20:26:47.367+0000
        status:
          type: string
          example: 404
        error:
          type: string
          example: Not Found
        message:
          type: string
        path:
          type: string
      
    ValidationError:
      type: object
      properties:
        timestamp:
          type: string
          example: 2020-03-22T14:52:51.714+0000
        status:
          type: string
          example: 400
        error:
          type: string
          example: Bad Request
        message:
          type: string
        path:
          type: string
        errors:
          type: array
          items:
            type: object
            properties:
              codes:
                type: array
                items:
                  type: string
              arguments:
                type: array
                items:
                  additionalProperties:
                    type:
                      string
              default_message:
                type: string
              object_name:
                type: string
              field:
                type: string
              rejected_value:
                type: string
              binding_failure:
                type: boolean
              code:
                type: string

    ControllerError:
      type: object
      properties:
        status:
          type: integer
          example: 404
        message_key:
          type: string
          example: NOT_FOUND
        extra:
          type: string
      required:
        - message_key
        - statust_id}​/edit